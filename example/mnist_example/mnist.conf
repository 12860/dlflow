
STEPS: "encode,train,evaluate,predict",

HDFS_WORKSPACE : "<SET_YOUR_HDFS_WORKSPACE_HERE>",
LOCAL_WORKSPACE : "./mnist"


HDFS_ENCODE_DIR : "$HDFS_WORKSPACE/encode/TAG=$FEATURE_TAG/<dt=$FEATURE_DATE:yyyy/mm/dd>",
HDFS_TFRECORD_DIR : "$HDFS_WORKSPACE/tfrecord/TAG=$FEATURE_TAG/<dt=$FEATURE_DATE:yyyy/mm/dd>",
HDFS_PREDICT_DIR:"$HDFS_WORKSPACE/predict/TAG=$FEATURE_TAG/<dt=$FEATURE_DATE:yyyy/mm/dd>",
HDFS_FEATURE_DIR:<SET_YOUR_HDFS_FEATURE_PATH_HERE> // Put the path of the feature file here. 
                    // At the same time, the feature needs to include the label and the primary key. 
                    // When you are doing testing or predicting step, 
                    // the label can be specified as any value, it is just a placeholder",


MODEL_TAG : "cnn",
FEATURE_TAG : "mnist",
MODEL_DATE : "20200710",
FEATURE_DATE : "20200711",
PRIMARY_KEYS : "index",
LABELS : "label",
DROP_COLUMNS: "" // columns that you dont need them partipate in training, sep by comma

MODELS_DIR : "your project path/dlflow/example/mnist_example/model/"#path can be revised as long as the model folder can be founed


MODEL: {
    model_name: "mnist_cnn", //this model name as same as your model name registed in your scripts,see mnist_classifier.py
    input_name: "NNDenseInput",
    classes: 1,
    learning_rate: 0.001,
    batch_size: 64,
    epochs: 10
},


SPARK: {
    master: "yarn",
    driver-memory: "4g",
    spark.submit.deployMode: "client",
    spark.yarn.queue: "<SET_YOUR_YARN_QUEUE_HERE>",
    spark.dynamicAllocation.enabled: "true",
    spark.dynamicAllocation.minExecutors: "2",
    spark.dynamicAllocation.maxExecutors: "8",
    spark.executor.cores: "1",
    spark.executor.memory: "3g",
    spark.executor.memoryOverhead: "1g",
    spark.default.parallelism: "10",
    spark.sql.shuffle.partitions: "10",
    <MAY_SET_OTHER_SPARK_CONFIG>: <MAY_SET_OTHER_SPARK_CONFIG>
},
